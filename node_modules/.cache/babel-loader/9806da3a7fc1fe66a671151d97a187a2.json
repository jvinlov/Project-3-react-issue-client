{"ast":null,"code":"var _jsxFileName = \"/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Login/index.js\";\nimport React, { Component } from 'react';\nimport { Form, Label, Button, Message } from 'semantic-ui-react';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log('Email & Password:', this.state);\n      const loginUrl = \"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/users/login\"); //localhost:8000/api/v1/user/login\n\n      const loginResponse = await fetch(loginUrl, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        credentials: 'include',\n        // Send a session cookie along with our request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await loginResponse.json();\n\n      if (parsedResponse.status.code === 200) {\n        console.log('Login successful');\n        this.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n      } else {\n        // Else display error message to the user\n        this.setState({\n          errorMsg: parsedResponse.status.message\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  } // Handling of form value change\n\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Input, {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Input, {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sign In\"), this.state.errorMsg ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.errorMsg) : null);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Login/index.js"],"names":["React","Component","Form","Label","Button","Message","Login","constructor","handleChange","e","preventDefault","setState","currentTarget","name","value","handleSubmit","console","log","state","loginUrl","process","env","REACT_APP_API_URL","loginResponse","fetch","method","body","JSON","stringify","credentials","headers","parsedResponse","json","status","code","props","history","push","errorMsg","message","email","password","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Label, Button, Message } from 'semantic-ui-react';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\t// Handling of form value change\n\thandleChange = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\n\t// Submission of login in form\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log('Email & Password:', this.state);\n\t\tconst loginUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/login`; //localhost:8000/api/v1/user/login\n\t\tconst loginResponse = await fetch(loginUrl, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(this.state),\n\t\t\tcredentials: 'include', // Send a session cookie along with our request\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\n\t\tconst parsedResponse = await loginResponse.json();\n\n\t\tif (parsedResponse.status.code === 200) {\n\t\t\tconsole.log('Login successful');\n\t\t\tthis.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n\t\t} else {\n\t\t\t// Else display error message to the user\n\t\t\tthis.setState({\n\t\t\t\terrorMsg: parsedResponse.status.message\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t<h4>Sign In</h4>\n\t\t\t\t<Label>Email</Label>\n\t\t\t\t<Form.Input type=\"email\" name=\"email\" onChange={this.handleChange} required/>\n\t\t\t\t<Label>Password</Label>\n\t\t\t\t<Form.Input type=\"password\" name=\"password\" onChange={this.handleChange} required />\n\t\t\t\t<Button type=\"submit\" color=\"green\" >Sign In</Button>\n\t\t\t\t{ this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null }\n\t\t\t</Form>\n\t\t)\n\t}\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}