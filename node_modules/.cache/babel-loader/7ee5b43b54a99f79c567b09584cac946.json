{"ast":null,"code":"var _jsxFileName = \"/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Register/index.js\";\nimport React, { Component } from 'react';\nimport { Form, Label, Button, Message } from 'semantic-ui-react';\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log('hello');\n      const registrationUrl = \"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/users/register\"); // localhost:8000/api/v1/users/register\n      // this is users.  this matches flask app.py: app.register_blueprint(user, url_prefix='/api/v1/users')\n\n      const registerResponse = await fetch(registrationUrl, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        credentials: 'include',\n        // this sends our session cookie with our request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await registerResponse.json();\n\n      if (parsedResponse.status.code === 201) {\n        console.log('Sign up successful');\n        this.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n      } else {\n        // Else display error message to the user\n        this.setState({\n          errorMsg: parsedResponse.status.message\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      department: '',\n      email: '',\n      password: ''\n    };\n  } // Handling of form value change\n\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Register New User\"), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Input, {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Department\"), React.createElement(Form.Input, {\n      type: \"text\",\n      name: \"department\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Input, {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Input, {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Register\"), this.state.errorMsg ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.errorMsg) : null);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Register/index.js"],"names":["React","Component","Form","Label","Button","Message","Register","constructor","handleChange","e","setState","currentTarget","name","value","handleSubmit","preventDefault","console","log","registrationUrl","process","env","REACT_APP_API_URL","registerResponse","fetch","method","body","JSON","stringify","state","credentials","headers","parsedResponse","json","status","code","props","history","push","errorMsg","message","department","email","password","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Label, Button, Message } from 'semantic-ui-react';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tdepartment: '',\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\n\t\n\t// Handling of form value change\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\n\t// Submission of register in form\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log('hello');\n\t\tconst registrationUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/register`; // localhost:8000/api/v1/users/register\n    \t// this is users.  this matches flask app.py: app.register_blueprint(user, url_prefix='/api/v1/users')\n    \tconst registerResponse = await fetch(registrationUrl, {\n    \t\tmethod: 'POST',\n    \t\tbody: JSON.stringify(this.state),\n    \t\tcredentials: 'include', // this sends our session cookie with our request\n    \t\theaders: {\n    \t\t\t'Content-Type': 'application/json'\n    \t\t}\n    \t});\n\n    \tconst parsedResponse = await registerResponse.json();\n  \n\t    if (parsedResponse.status.code === 201) {\n\t      console.log('Sign up successful');\n\t      this.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n\t    } else {\n\t      // Else display error message to the user\n\t      this.setState({\n\t        errorMsg: parsedResponse.status.message\n\t      });\n\t    }\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t<h4>Register New User</h4>\n\t\t        <Label>Name</Label>\n\t\t        <Form.Input type=\"text\" name=\"name\" onChange={this.handleChange} required />\n\t\t        <Label>Department</Label>\n\t\t        <Form.Input type=\"text\" name=\"department\" onChange={this.handleChange} required />\n\t\t        <Label>Email</Label>\n\t\t        <Form.Input type=\"email\" name=\"email\" onChange={this.handleChange} required />\n\t\t        <Label>Password</Label>\n\t\t        <Form.Input type=\"password\" name=\"password\" onChange={this.handleChange} required />\n\t\t        <Button type=\"submit\" color=\"green\">Register</Button>\n\t\t        { this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null }\n\t\t    </Form>\n\t\t)\n\t}\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}