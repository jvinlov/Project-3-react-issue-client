{"ast":null,"code":"var _jsxFileName = \"/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Register/index.js\";\nimport React, { Component } from 'react';\nimport { Form, Label, Button, Message, Grid, Header, Icon, Segment } from 'semantic-ui-react';\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log('hello');\n      const registrationUrl = \"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/users/register\"); // localhost:8000/api/v1/users/register\n      // this is users.  this matches flask app.py: app.register_blueprint(user, url_prefix='/api/v1/users')\n\n      const registerResponse = await fetch(registrationUrl, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        credentials: 'include',\n        // this sends our session cookie with our request\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedResponse = await registerResponse.json();\n\n      if (parsedResponse.status.code === 201) {\n        console.log('Sign up successful');\n        this.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n      } else {\n        // Else display error message to the user\n        this.setState({\n          errorMsg: parsedResponse.status.message\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      department: '',\n      email: '',\n      password: ''\n    };\n  } // Handling of form value change\n\n\n  render() {\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"baseball ball\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" Register for Issues\"), React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      icon: \"signup\",\n      iconPosition: \"left\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      iconPosition: \"left\",\n      icon: \"users\",\n      placeholder: \"Department\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Register\")))));\n  }\n\n}\n\nexport default Register;\n{\n  /*<Form onSubmit={this.handleSubmit}>\n  <h4>Register New User</h4>\n        <Label>Name</Label>\n        <Form.Input type=\"text\" name=\"name\" onChange={this.handleChange} required />\n        <Label>Department</Label>\n        <Form.Input type=\"text\" name=\"department\" onChange={this.handleChange} required />\n        <Label>Email</Label>\n        <Form.Input type=\"email\" name=\"email\" onChange={this.handleChange} required />\n        <Label>Password</Label>\n        <Form.Input type=\"password\" name=\"password\" onChange={this.handleChange} required />\n        <Button type=\"submit\" color=\"green\">Register</Button>\n        { this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null }\n    </Form>*/\n}","map":{"version":3,"sources":["/Users/user/sei-cranberry-gobblers/Project-3/Project-3-react-issue-client/react-issue-app/src/Register/index.js"],"names":["React","Component","Form","Label","Button","Message","Grid","Header","Icon","Segment","Register","constructor","handleChange","e","setState","currentTarget","name","value","handleSubmit","preventDefault","console","log","registrationUrl","process","env","REACT_APP_API_URL","registerResponse","fetch","method","body","JSON","stringify","state","credentials","headers","parsedResponse","json","status","code","props","history","push","errorMsg","message","department","email","password","render","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Label, Button, Message, Grid, Header, Icon, Segment} from 'semantic-ui-react';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tdepartment: '',\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\n\t\n\t// Handling of form value change\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\n\t// Submission of register in form\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconsole.log('hello');\n\t\tconst registrationUrl = `${process.env.REACT_APP_API_URL}/api/v1/users/register`; // localhost:8000/api/v1/users/register\n    \t// this is users.  this matches flask app.py: app.register_blueprint(user, url_prefix='/api/v1/users')\n    \tconst registerResponse = await fetch(registrationUrl, {\n    \t\tmethod: 'POST',\n    \t\tbody: JSON.stringify(this.state),\n    \t\tcredentials: 'include', // this sends our session cookie with our request\n    \t\theaders: {\n    \t\t\t'Content-Type': 'application/json'\n    \t\t}\n    \t});\n\n    \tconst parsedResponse = await registerResponse.json();\n  \n\t    if (parsedResponse.status.code === 201) {\n\t      console.log('Sign up successful');\n\t      this.props.history.push('/issues'); // Change url to /issues programmatically with react-router\n\t    } else {\n\t      // Else display error message to the user\n\t      this.setState({\n\t        errorMsg: parsedResponse.status.message\n\t      });\n\t    }\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h2' color='teal' textAlign='center'>\n        <Icon name='baseball ball' /> Register for Issues\n      </Header>\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input icon='signup' iconPosition='left'placeholder='First name' />\n          <Form.Input \n            \n            iconPosition='left'\n            icon='users'\n            placeholder='Department' \n          />\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n          />\n\n          <Button color='teal' fluid size='large'>\n            Register\n          </Button>\n        </Segment>\n      </Form>\n      {/*<Message>\n        New to us? <a href='#'>Sign Up</a>\n      </Message>*/}\n    </Grid.Column>\n  </Grid>\n\t\t)\n\t}\n}\n\nexport default Register;\n\n\t\t\t{/*<Form onSubmit={this.handleSubmit}>\n\t\t\t\t<h4>Register New User</h4>\n\t\t        <Label>Name</Label>\n\t\t        <Form.Input type=\"text\" name=\"name\" onChange={this.handleChange} required />\n\t\t        <Label>Department</Label>\n\t\t        <Form.Input type=\"text\" name=\"department\" onChange={this.handleChange} required />\n\t\t        <Label>Email</Label>\n\t\t        <Form.Input type=\"email\" name=\"email\" onChange={this.handleChange} required />\n\t\t        <Label>Password</Label>\n\t\t        <Form.Input type=\"password\" name=\"password\" onChange={this.handleChange} required />\n\t\t        <Button type=\"submit\" color=\"green\">Register</Button>\n\t\t        { this.state.errorMsg ? <Message negative>{this.state.errorMsg}</Message> : null }\n\t\t    </Form>*/}\n"]},"metadata":{},"sourceType":"module"}